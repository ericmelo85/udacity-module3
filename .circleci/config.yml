# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
#orbs:
  # Declare a dependency on the welcome-orb
#  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands:
  destroy_environments:
    steps:
      - run:
          name: Destroy the stack
          command: aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail
jobs:
  createInfrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: Diags
          command: |
            pwd 
            ls -la . ..
            printenv 
      - run: 
          name: "Create the infra" 
          command: |
            aws cloudformation deploy \
            --stack-name prod-${CIRCLE_WORKFLOW_ID} \
            --template-file template.yml
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: exit on failure 
          command: | 
            return 1
      - destroy_environments
            
      #- run: echo [all] > ~/inventory
      #- run:
      #    name: " list and append the ec2 instances to inventory "
      #    command: |
      #      aws ec2 describe-instances
      #      --query 'Reservations[*].Instances[*].PublicIpAddress'
      #      --filters "Name=tag:Project,Values=udacity"
      #      --output text >> ~/inventory
      #-  persist_to_workspace:
      #     root: ~/
      #     paths:
      #       - .
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - createInfrastructure
      - smoke_test:
          requires:
            - createInfrastructure
